[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
uniform vec4 line_color : hint_color = vec4(1.0); // White color
uniform float line_thickness : hint_range(0.0, 10.0) = 1.0;
void fragment(){
	vec2 size = TEXTURE_PIXEL_SIZE * line_thickness;
	
	float left = texture(TEXTURE, UV + vec2(-size.x, 0)).a;
	float right = texture(TEXTURE, UV + vec2(size.x, 0)).a;
	float up = texture(TEXTURE, UV + vec2(0, size.y)).a;
	float down = texture(TEXTURE, UV + vec2(0, -size.y)).a;
	float sum = left + right + up + down;
	// This value represents the black-and-white mask we'll use to outline the sprite.
	float outline = min(sum, 1.0);
	vec4 color = texture(TEXTURE, UV);
	// We apply the outline color by calculating a mask surrounding the sprite.
	COLOR = mix(color, line_color, outline - color.a);
}"

[resource]
shader = SubResource( 1 )
shader_param/line_color = Color( 1, 1, 1, 1 )
shader_param/line_thickness = 1.0
